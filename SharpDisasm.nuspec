<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
    <metadata>
        <id>SharpDisasm</id>
        <version>$version$</version>
        <title>SharpDisasm</title>
        <authors>Justin Stenning</authors>
        <owners>Justin Stenning</owners>
        <requireLicenseAcceptance>true</requireLicenseAcceptance>
        <licenseUrl>https://github.com/spazzarama/SharpDisasm/blob/master/LICENSE.md</licenseUrl>
        <projectUrl>https://github.com/spazzarama/SharpDisasm</projectUrl>
        <description>SharpDisam is a disassembler written in C# able to decode the x86 and x86-64 instruction set architectures.

It features:
 * a full C# port of the libudis86 C library
 * a set of simple C# classes wrapping the udis86 API
 * support for x86 16-bit, 32-bit and 64-bit instruction set architectures
 * support for outputting in Intel and AT&amp;T syntax
 * support for all x86 and x86-64 (AMD64) General purpose and System instructions.
 * support for the following ISA extensions:
   - MMX, FPU (x87), AMD 3DNow
   - SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AES,
   - AMD-V, INTEL-VMX, SMX
 * instructions are defined in an XML document that is consumed by a T4 template to generate opcode tables for performance.
 * the XML instructions document is exactly the same as that found within the udis86 project. The generated C# opcode tables is also very similar except in syntax to those generated by the Python script in the libudis86 C-library.
 * able to decode more than 4 million 64-bit instructions per second (with an average instruction size of 7-bytes)
 
Usage: http://sharpdisasm.codeplex.com/documentation</description>
        <summary>A C# port of the udis86 x86 disassembler.</summary>
        <releaseNotes>$version$
1. Added ability to resolve RIP relative addresses in ASM outputting
2. 64-bit definition fixes for a number of instructions
3. Support for .NET Standard target

1. Added support for offset into IAssemblyCode
2. Fix exceptions on invalid instructions (contributed by ste-art)
3. Fix ATT syntax for enter/bound mnemonics being dropped
4. Translator internals refactored (better code reuse)
5. A few Debug.Asserts replaced with exceptions for Translator and Instruction.ToString
1.1.5
1. Use of unsafe replaced with an assembly code reader interface
1.0.2
1. Full port of udis86 C-library into C#
2. Wrapper class Disassembler for those not familiar with the libudis86 C-library</releaseNotes>
        <copyright>Copyright (c) 2015 Justin Stenning</copyright>
        <tags>ASM disassembler x86 x86-64 instructions opcodes decoder AMD Intel</tags>
        <dependencies>
        </dependencies>
    </metadata>
    <files>
        <file src=".\bin\Release\Net45\SharpDisasm.dll" target="lib\netstandard2.0" />
        <file src=".\bin\Release\Net45\SharpDisasm.pdb" target="lib\netstandard2.0" />
        <file src=".\bin\Release\Net45\SharpDisasm.xml" target="lib\netstandard2.0" />
        <file src=".\bin\Release\Net45\SharpDisasm.dll" target="lib\net45" />
        <file src=".\bin\Release\Net45\SharpDisasm.pdb" target="lib\net45" />
        <file src=".\bin\Release\Net45\SharpDisasm.xml" target="lib\net45" />
        <file src=".\bin\Release\Net4\SharpDisasm.dll" target="lib\net40" />
        <file src=".\bin\Release\Net4\SharpDisasm.pdb" target="lib\net40" />
        <file src=".\bin\Release\Net4\SharpDisasm.xml" target="lib\net40" />
        <file src=".\bin\Release\Net35\SharpDisasm.dll" target="lib\net35" />
        <file src=".\bin\Release\Net35\SharpDisasm.pdb" target="lib\net35" />
        <file src=".\bin\Release\Net35\SharpDisasm.xml" target="lib\net35" />
        <file src=".\SharpDisasm\*.cs" target="src" />
        <file src=".\SharpDisasm\Translators\*.cs" target="src\Translators" />
        <file src=".\SharpDisasm\udis86\*.cs" target="src\udis86" />
        <file src="**\*.tt" target="src" />
        <file src="**\optable.xml" target="src" />
        <file src="**\optable.xsl" target="src" />
    </files>
</package>